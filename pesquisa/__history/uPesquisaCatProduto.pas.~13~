unit uPesquisaCatProduto;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Vcl.Grids, Vcl.DBGrids;

type
  TfrmPesquisaCatProduto = class(TForm)
    pnBottomPesquisa: TPanel;
    btConfirmar: TButton;
    btFechar: TButton;
    pnTopPesquisa: TPanel;
    lbPesquisa: TLabel;
    cbPesquisa: TComboBox;
    edPesquisa: TEdit;
    btConsulta: TButton;
    dbPesquisaCatProduto: TDBGrid;
    qryPesquisaCatProduto: TFDQuery;
    dstPesquisaCatProduto: TDataSource;
    qryPesquisaCatProdutocodigo: TIntegerField;
    qryPesquisaCatProdutonome: TWideStringField;
    procedure btFecharClick(Sender: TObject);
    procedure btConsultaClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure dbPesquisaClienteDblClick(Sender: TObject);
    procedure btConfirmarClick(Sender: TObject);
  private
    { Private declarations }
    FCodigoSelecionado: Integer;
  public
    { Public declarations }
    function SelecionarCliente: Integer;
  end;

var
  frmPesquisaCatProduto: TfrmPesquisaCatProduto;

implementation

{$R *.dfm}

procedure TfrmPesquisaCatProduto.btFecharClick(Sender: TObject);
begin
  close;
end;

procedure TfrmPesquisaCatProduto.dbPesquisaClienteDblClick(Sender: TObject);
begin
  if not qryPesquisaCatProduto.IsEmpty then
  begin
    FCodigoSelecionado := qryPesquisaCatProdutocodigo.AsInteger;
    ModalResult := mrOk; // Fecha o form
  end;
end;

procedure TfrmPesquisaCatProduto.btConfirmarClick(Sender: TObject);
begin
  if not qryPesquisaCatProduto.IsEmpty then
  begin
    FCodigoSelecionado := qryPesquisaCatProdutocodigo.AsInteger;
    ModalResult := mrOk; // Fecha o form
end;
end;

procedure TfrmPesquisaCatProduto.btConsultaClick(Sender: TObject);
begin

  qryPesquisaCatProduto.Close;
  qryPesquisaCatProduto.SQL.Clear;
  qryPesquisaCatProduto.SQL.Add('SELECT * FROM cat_produto ');
  qryPesquisaCatProduto.SQL.Add('WHERE 1=1');

  if edPesquisa.Text <> '' then
  begin

    with qryPesquisaCliente do
      begin
        if cbPesquisa.text = 'codigo' then
        begin
          qryPesquisaCliente.SQL.Add('AND codigo = :codigo');
          qryPesquisaCliente.ParamByName('codigo').AsInteger := StrToIntDef(edPesquisa.Text, 0);
        end;

        if cbPesquisa.text = 'nome' then
        begin
          qryPesquisaCliente.SQL.Add('AND nome ILIKE :nome');
           qryPesquisaCliente.ParamByName('nome').AsString := '%' + edPesquisa.Text + '%';
        end;

        if cbPesquisa.text = 'data_cadastro' then
        begin
          qryPesquisaCliente.SQL.Add('AND data_cadastro = :data_cadastro');
          qryPesquisaCliente.ParamByName('data_cadastro').AsDate := StrToDateDef(edPesquisa.Text, 0);
        end;

        if cbPesquisa.text = 'cpf' then
        begin
          qryPesquisaCliente.SQL.Add('AND cpf ILIKE :cpf');
          qryPesquisaCliente.ParamByName('cpf').AsString := '%' + edPesquisa.Text + '%';
        end;

        if cbPesquisa.text = 'telefone' then
        begin
          qryPesquisaCliente.SQL.Add('AND telefone ILIKE :telefone');
          qryPesquisaCliente.ParamByName('telefone').AsString := '%' + edPesquisa.Text + '%';
        end;

        if cbPesquisa.text = 'email' then
        begin
          qryPesquisaCliente.SQL.Add('AND email ILIKE :email');
          qryPesquisaCliente.ParamByName('email').AsString := '%' + edPesquisa.Text + '%';
        end;

        if cbPesquisa.text = 'data_nascimento' then
        begin
          qryPesquisaCliente.SQL.Add('AND data_nascimento = :data_nascimento');
           qryPesquisaCliente.ParamByName('data_nascimento').AsDate := StrToDateDef(edPesquisa.Text, 0);
        end;

        if cbPesquisa.text = 'cep' then
        begin
          qryPesquisaCliente.SQL.Add('AND cep ILIKE :cep');
          qryPesquisaCliente.ParamByName('cep').AsString := '%' + edPesquisa.Text + '%';
        end;

        if cbPesquisa.text = 'bairro' then
        begin
          qryPesquisaCliente.SQL.Add('AND bairro ILIKE :bairro');
          qryPesquisaCliente.ParamByName('bairro').AsString := '%' + edPesquisa.Text + '%';
        end;

        if cbPesquisa.text = 'logradouro' then
        begin
          qryPesquisaCliente.SQL.Add('AND logradouro ILIKE :logradouro');
          qryPesquisaCliente.ParamByName('logradouro').AsString := '%' + edPesquisa.Text + '%';
        end;

        if cbPesquisa.text = 'numero' then
        begin
          qryPesquisaCliente.SQL.Add('AND numero ILIKE :numero');
          qryPesquisaCliente.ParamByName('numero').AsString := '%' + edPesquisa.Text + '%';
        end;

        if cbPesquisa.text = 'complemento' then
        begin
          qryPesquisaCliente.SQL.Add('AND complemento ILIKE :complemento');
          qryPesquisaCliente.ParamByName('complemento').AsString := '%' + edPesquisa.Text + '%';
        end;

        if cbPesquisa.text = 'pais' then
        begin
          qryPesquisaCliente.SQL.Add('AND pais ILIKE :pais');
          qryPesquisaCliente.ParamByName('pais').AsString := '%' + edPesquisa.Text + '%';
        end;

      end;

  end;

  qryPesquisaCliente.Open;

end;

procedure TfrmPesquisaCatProduto.FormShow(Sender: TObject);
var
  i : integer;
begin
  qryPesquisaCliente.Close;
  qryPesquisaCliente.SQL.Clear;
  qryPesquisaCliente.SQL.Add('SELECT * FROM CLIENTE');
  qryPesquisaCliente.Open;

  cbPesquisa.Items.Clear;

  for i:=0 to qryPesquisaCliente.FieldCount -1 do
  begin
    cbPesquisa.Items.Add(qryPesquisaCliente.Fields[i].FieldName);
  end;

  if cbPesquisa.Items.Count > 0 then
    cbPesquisa.ItemIndex := 0;

end;

function TfrmPesquisaCatProduto.SelecionarCliente: Integer;
begin

  FCodigoSelecionado := 0; // valor padrão

  ShowModal;
  Result := FCodigoSelecionado;
end;

end.
